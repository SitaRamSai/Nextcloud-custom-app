{"version":3,"mappings":"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","names":["isPublicShare","loadState","getSharingToken","EXCALIDRAW_ASSET_PATH","linkTo","App","lazy","__vitePreload","generateRandomId","renderApp","rootElement","props","root","createRoot","React","StrictMode","Suspense","publicSharingToken","handlePublicSharing","handleNonPublicSharing","token","Component","createWhiteboardComponent","registerViewerHandler","fileId","imgframeElement","whiteboardElement","createWhiteboardElement","element","createElement","randomId","event"],"ignoreList":[0],"sources":["../node_modules/@nextcloud/sharing/dist/public.mjs","../src/main.tsx"],"sourcesContent":["import { loadState } from \"@nextcloud/initial-state\";\nfunction isPublicShare() {\n  return loadState(\"files_sharing\", \"isPublic\", null) ?? document.querySelector(\n    'input#isPublic[type=\"hidden\"][name=\"isPublic\"][value=\"1\"]'\n  ) !== null;\n}\nfunction getSharingToken() {\n  return loadState(\"files_sharing\", \"sharingToken\", null) ?? document.querySelector('input#sharingToken[type=\"hidden\"]')?.value ?? null;\n}\nexport {\n  getSharingToken,\n  isPublicShare\n};\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { linkTo } from '@nextcloud/router'\nimport { StrictMode, lazy, Suspense } from 'react'\nimport { createRoot } from 'react-dom'\nimport { loadState } from '@nextcloud/initial-state'\nimport { getSharingToken, isPublicShare } from '@nextcloud/sharing/public'\n\nimport './viewer.css'\n\nconst EXCALIDRAW_ASSET_PATH = linkTo('whiteboard', 'dist/')\nconst App = lazy(() => import('./App'))\n\nconst generateRandomId = () =>\n\tMath.random()\n\t\t.toString(36)\n\t\t.replace(/[^a-z]+/g, '')\n\t\t.substr(2, 10)\n\nconst renderApp = (rootElement, props) => {\n\tconst root = createRoot(rootElement)\n\troot.render(\n\t\t<StrictMode>\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<App {...props} />\n\t\t\t</Suspense>\n\t\t</StrictMode>,\n\t)\n\treturn root\n}\n\nwindow.EXCALIDRAW_ASSET_PATH = EXCALIDRAW_ASSET_PATH\n\nconst publicSharingToken = getSharingToken()\n\nif (isPublicShare()) {\n\thandlePublicSharing(publicSharingToken)\n}\n\nhandleNonPublicSharing()\n\n// Handler functions\nfunction handlePublicSharing(token) {\n\tconst filesTable = document.querySelector('.files-list__table') || document.querySelector('#preview table.files-filestable')\n\n\tif (filesTable) {\n\t\tconst Component = createWhiteboardComponent()\n\t\tregisterViewerHandler(Component)\n\t\treturn\n\t}\n\n\tconst fileId = loadState('whiteboard', 'file_id')\n\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\tconst imgframeElement = document.getElementById('preview')\n\t\tif (!imgframeElement) {\n\t\t\tconsole.error('#imgframe element not found')\n\t\t\treturn\n\t\t}\n\n\t\timgframeElement.innerHTML = ''\n\n\t\tconst whiteboardElement = createWhiteboardElement()\n\t\timgframeElement.appendChild(whiteboardElement)\n\n\t\trenderApp(whiteboardElement, {\n\t\t\tfileId,\n\t\t\tisEmbedded: false,\n\t\t\tfileName: document.title,\n\t\t\tpublicSharingToken: token,\n\t\t})\n\t})\n}\n\nfunction handleNonPublicSharing() {\n\tconst Component = createWhiteboardComponent()\n\n\tif (typeof OCA.Viewer !== 'undefined') {\n\t\tregisterViewerHandler(Component)\n\t} else {\n\t\tconsole.error('Could not register whiteboard handler for viewer')\n\t}\n}\n\nfunction createWhiteboardElement() {\n\tconst element = document.createElement('div')\n\telement.id = `whiteboard-${generateRandomId()}`\n\telement.className = 'whiteboard'\n\treturn element\n}\n\nfunction createWhiteboardComponent() {\n\treturn {\n\t\tname: 'Whiteboard',\n\t\trender(createElement) {\n\t\t\tthis.$emit('update:loaded', true)\n\t\t\tconst randomId = generateRandomId()\n\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tconst rootElement = document.getElementById(\n\t\t\t\t\t`whiteboard-${randomId}`,\n\t\t\t\t)\n\t\t\t\trootElement.addEventListener('keydown', event => {\n\t\t\t\t\tif (event.key === 'Escape') {\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.root = renderApp(rootElement, {\n\t\t\t\t\tfileId: this.fileid,\n\t\t\t\t\tisEmbedded: this.isEmbedded,\n\t\t\t\t\tfileName: this.basename,\n\t\t\t\t\tpublicSharingToken: getSharingToken(),\n\t\t\t\t})\n\t\t\t})\n\n\t\t\treturn createElement(\n\t\t\t\t'div',\n\t\t\t\t{\n\t\t\t\t\tattrs: { id: `whiteboard-${randomId}` },\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'whiteboard',\n\t\t\t\t\t\t{ 'whiteboard-viewer__embedding': this.isEmbedded },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t'',\n\t\t\t)\n\t\t},\n\t\tbeforeDestroy() {\n\t\t\tthis.root?.unmount()\n\t\t},\n\t\tprops: {\n\t\t\tfilename: { type: String, default: null },\n\t\t\tfileid: { type: Number, default: null },\n\t\t\tisEmbedded: { type: Boolean, default: false },\n\t\t},\n\t\tdata: () => ({ root: null }),\n\t}\n}\n\nfunction registerViewerHandler(Component) {\n\twindow.OCA.Viewer.registerHandler({\n\t\tid: 'whiteboard',\n\t\tmimes: ['application/vnd.excalidraw+json'],\n\t\tcomponent: Component,\n\t\tgroup: null,\n\t\ttheme: 'default',\n\t\tcanCompare: true,\n\t})\n}\n"],"file":"js/whiteboard-main.mjs"}